{"version":3,"sources":["pages/Risk.js","actions/index.js","hardcode/info.js","pages/Calculator.js","img/home.ico","components/Header.js","App.js","reportWebVitals.js","reducers/riskLevel.js","reducers/index.js","index.js"],"names":["Risk","dispatch","useDispatch","useState","info","setInfo","disableContinue","setContinue","chart","setChart","data","setData","handleRisk","id","temp","x","y","buttons","document","getElementsByClassName","rows","getElementsByTagName","i","length","classList","remove","add","paintSelected","type","payload","parseInt","switchChart","useEffect","className","centerAlign","small","medium","large","map","index","color","isHollow","onClick","e","target","isDisabled","to","hidden","isExpanded","ChartDonut","ariaDesc","ariaTitle","constrainToVisibleArea","labels","datum","subTitle","title","ind","risk","useSelector","state","min","disabled","name","cols","values","percentages","total","parseFloat","difference","expected","current","ini_difference","t","value","Math","round","Error","push","ex","text","j","num","result","newAmount","results","style","getElementById","alert","message","Header","alt","src","homeIcon","App","path","exact","component","Calculator","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","riskLevel","action","allReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.760c4718.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { selectRisk } from \"../actions\";\nimport getInfo from '../hardcode/info';\nimport { Grid, Cell, Button } from 'react-foundation';\nimport '../css/risk.css';\nimport { ChartDonut } from '@patternfly/react-charts';\nimport { Link } from \"react-router-dom\";\n\n\nfunction Risk() {\n  const dispatch = useDispatch();\n  const [info, setInfo] = useState([]);\n  const [disableContinue, setContinue] = useState(true);\n  const [chart, setChart] = useState(false);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    setInfo(getInfo());\n  }, []);\n  function handleRisk(id) {\n    var temp = info[id];\n    var data = [{ x: 'Bonds', y: temp[0] }, { x: 'Large Cap', y: temp[1] }, { x: 'Mid Cap', y: temp[2] }, { x: 'Foreign', y: temp[3] }, { x: 'Small Cap', y: temp[4] }];\n    setData(data);\n    paintSelected(id);\n    dispatch(selectRisk(parseInt(id)+1));\n    setContinue(false);\n  }\n  function paintSelected(id){\n    let buttons = document.getElementsByClassName('btn-risk');\n    let rows = document.getElementsByTagName('tr');\n    for(let i=0;i<buttons.length;i++){\n      buttons[i].classList.remove(\"active\");\n      if(buttons[i].id===id){\n        buttons[i].classList.add('active');\n      }\n    }\n    for(let i=0;i<rows.length;i++){\n      rows[i].classList.remove(\"active\");\n      if(rows[i].id===id){\n        rows[i].classList.add('active');\n      }\n    }\n  }\n  function switchChart() {\n    setChart(!chart);\n  }\n  return (\n    <div className=\"App\">\n      <Grid className=\"display\" centerAlign>\n        <h4 className=\"title\">Please Select A Risk Level For Your Investment Portfolio</h4>\n\n        <Cell small={10} medium={8} large={8} className=\"info-container\">\n          <h5>Low</h5>\n          <h5>High</h5>\n        </Cell>\n\n        <Cell small={10} medium={10} large={8} className=\"buttons-container\">\n          {\n            info.length > 0 && info.map((i, index) => (\n              <Button key={index}\n                id={index}\n                color=\"secondary\"\n                className=\"btn-risk\"\n                isHollow\n                onClick={(e) => handleRisk(e.target.id)}>{index + 1}</Button>\n            ))\n          }\n          <Button color=\"primary\" className=\"btn-risk\" isDisabled={disableContinue}>\n              <Link to='/calculator'>Continue</Link>\n              </Button>\n        </Cell>\n        \n            <Cell small={10} medium={5} large={5} hidden={!chart}>\n              <Button isExpanded color=\"success\" onClick={switchChart}>Table View</Button>\n              {\n                data.length > 0 ?\n                  <ChartDonut\n                    ariaDesc=\"Average number of pets\"\n                    ariaTitle=\"Donut chart example\"\n                    constrainToVisibleArea={true}\n                    data={data}\n                    labels={({ datum }) => `${datum.x}: ${datum.y}%`}\n                    subTitle=\"PORTFOLIO\"\n                    title=\"INVESTMENT\"\n                  />\n                  :\n                  <h3>Please select a risk level</h3>\n              }\n\n            </Cell>\n            <Cell small={12} medium={10} large={8} hidden={chart}>\n              <Button isExpanded color=\"success\" onClick={switchChart}>Donut Chart View</Button>\n              <table>\n                <thead>\n                  <tr>\n                    <th>Risk</th>\n                    <th>Bonds %</th>\n                    <th>Large Cap %</th>\n                    <th>Mid Cap %</th>\n                    <th>Foreign %</th>\n                    <th>Small Cap %</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    info.length > 0 && info.map((i, index) => (\n\n                      <tr key={index} id={index}>\n                        <td>{index + 1}</td>\n                        {\n                          i.map((x, ind) => (\n                            <td key={ind}>{x}</td>\n                          ))\n                        }\n                      </tr>\n                    ))\n                  }\n                </tbody>\n              </table>\n            </Cell>\n      </Grid>\n\n    </div>\n  );\n}\n\nexport default Risk;\n","export const selectRisk = (level) =>{\n    return{\n        type:'NEW_RISK',\n        payload:level\n    };\n};","export default function getInfo(){\n    let info =[\n        [80,20,0,0,0],\n        [70,15,15,0,0],\n        [60,15,15,10,0],\n        [50,20,20,10,0],\n        [40,20,20,20,0],\n        [35,25,5,30,5],\n        [20,25,25,25,5],\n        [10,20,40,20,10],\n        [5,15,40,25,15],\n        [0,5,25,30,40]\n    ]; \n    return info;\n}","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport getInfo from '../hardcode/info';\nimport { Grid, Cell, Button } from 'react-foundation';\nimport '../css/calculator.css';\nimport { Link } from \"react-router-dom\";\n\n\nfunction Risk() {\n    const risk = useSelector(state => state.risk);\n    const [info, setInfo] = useState([]);\n\n    useEffect(() => {\n        var data = getInfo();\n        setInfo(data[risk - 1]);\n    }, [risk]);\n\n    function calculate() {\n        var labels = [\"Bonds\", \"Large Cap\", \"Mid Cap\", \"Foreign\", \"Small Cap\"];\n        var values = document.getElementsByClassName('values');\n        var percentages = info;\n        var total = parseFloat(0);\n        var difference = [];\n        var expected = [];\n        var current = [];\n        var ini_difference = [];\n        var t = 0;\n        try {\n            for (let i = 0; i < values.length; i++) {\n                t = parseFloat(values[i].value);\n                t = Math.round(t * 100) / 100;\n                if (t < 0) {\n                    throw new Error(\"Only positive numbers >= 0\");\n                }\n                total = total + t;\n                current.push(t);\n            }\n            for (let i = 0; i < percentages.length; i++) {\n                var per = percentages[i] / 100;\n                var ex = total * per;\n                ex = Math.round(ex * 100) / 100\n                expected.push(ex);\n                t = parseFloat(ex - current[i]);\n                t = Math.round(t * 100) / 100;\n                difference.push(t);\n                ini_difference.push(t);\n            }\n            var text = \"\";\n            for (let i = 0; i < difference.length; i++) {\n                if (difference[i] > 0) {\n                    for (let j = 0; j < difference.length; j++) {\n                        if (j !== i && difference[j] < 0) {\n                            var num = difference[j] * -1;\n                            num = Math.round(num * 100) / 100;\n                            var result = 0\n                            if (difference[i] >= num) {\n                                result = difference[i] - num;\n                                result = Math.round(result * 100) / 100;\n                                text = text + `Transfer ${(difference[j] * -1)} from ${labels[j]} to ${labels[i]} \\n`;\n                                difference[i] = result;\n                                difference[j] = 0;\n                            } else if (difference[i] !== 0) {\n                                result = num - difference[i];\n                                result = Math.round(result * 100) / 100;\n                                text = text + `Transfer ${(difference[i])} from ${labels[j]} to ${labels[i]} \\n`;\n                                difference[i] = 0;\n                                difference[j] = result * -1;\n                            }\n                        }\n                    }\n                }\n            }\n\n            let newAmount = document.getElementsByClassName('new-amount');\n            let results = document.getElementsByClassName('results');\n\n            for (let i = 0; i < newAmount.length; i++) {\n                newAmount[i].value = expected[i];\n                newAmount[i].style.color = \"blue\";\n                if (ini_difference[i] >= 0) {\n                    results[i].style.color = \"green\";\n                    results[i].value = '+' + ini_difference[i];\n                } else {\n                    results[i].style.color = \"red\";\n                    results[i].value = ini_difference[i];\n                }\n            }\n\n            let recomended = document.getElementById(\"recomended\");\n            recomended.value = text;\n        } catch (e) {\n            alert(e.name + ': ' + e.message)\n        }\n    }\n    return (\n        <div className=\"App\">\n            {\n                risk === 0 ?\n                    <h1>Select a <Link to='/'>RISK LEVEL</Link> before navigate to this page</h1>\n                    :\n                    <Grid className=\"display\" centerAlign>\n                        <h1 className=\"title\">Personalized Portfolio</h1>\n\n                        <Cell small={10} medium={8} large={8}>\n                            <h3>Risk Level {risk}</h3>\n                        </Cell>\n\n                        <Cell small={12} medium={10} large={8}>\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th>Bonds</th>\n                                        <th>Large Cap</th>\n                                        <th>Mid Cap</th>\n                                        <th>Foreign</th>\n                                        <th>Small Cap</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        {\n                                            info.length > 0 && info.map((i, index) => (\n                                                <td key={index}>{i}%</td>\n                                            ))\n                                        }\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </Cell>\n                        <Cell small={10} medium={8} large={8}>\n                            <h3>Please Enter Your Current Portfolio</h3>\n                        </Cell>\n\n                        <Cell small={12} medium={10} large={8}>\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th>Current Amount</th>\n                                        <th>Difference</th>\n                                        <th>New Amount</th>\n                                        <th>Recomended Transfers</th>\n                                    </tr>\n                                </thead>\n                            </table>\n                        </Cell>\n                        <Cell small={12} medium={10} large={8}>\n                            <Grid className=\"display\">\n                                <Cell small={4} medium={3}>\n                                    <div className=\"current\">\n                                        <label>Bonds $:</label>\n                                        <input className=\"values\" type=\"number\" min={0}></input>\n                                    </div>\n                                    <div className=\"current\">\n                                        <label>Large Cap $:</label>\n                                        <input className=\"values\" type=\"number\" min={0}></input>\n                                    </div>\n                                    <div className=\"current\">\n                                        <label>Mid Cap $:</label>\n                                        <input className=\"values\" type=\"number\" min={0}></input>\n                                    </div>\n                                    <div className=\"current\">\n                                        <label>Foreign $:</label>\n                                        <input className=\"values\" type=\"number\" min={0}></input>\n                                    </div>\n                                    <div className=\"current\">\n                                        <label>Small Cap $:</label>\n                                        <input className=\"values\" type=\"number\" min={0}></input>\n                                    </div>\n                                </Cell>\n                                <Cell small={2} medium={3}>\n                                    <input className=\"results\" type=\"text\" disabled></input>\n                                    <input className=\"results\" type=\"text\" disabled></input>\n                                    <input className=\"results\" type=\"text\" disabled></input>\n                                    <input className=\"results\" type=\"text\" disabled></input>\n                                    <input className=\"results\" type=\"text\" disabled></input>\n\n                                </Cell>\n                                <Cell small={3}>\n                                    <input className=\"new-amount\" type=\"text\" disabled></input>\n                                    <input className=\"new-amount\" type=\"text\" disabled></input>\n                                    <input className=\"new-amount\" type=\"text\" disabled></input>\n                                    <input className=\"new-amount\" type=\"text\" disabled></input>\n                                    <input className=\"new-amount\" type=\"text\" disabled></input>\n\n                                </Cell>\n                                <Cell small={3}>\n                                    <textarea disabled id=\"recomended\" name=\"recomended\" rows=\"10\" cols=\"50\" />\n                                </Cell>\n                            </Grid>\n                            <Button isExpanded color=\"success\" onClick={calculate}>Rebalance</Button>\n                        </Cell>\n                    </Grid>\n            }\n\n        </div>\n    );\n}\n\nexport default Risk;\n","export default __webpack_public_path__ + \"static/media/home.0417ee9b.ico\";","import React from 'react';\nimport '../css/header.css';\nimport homeIcon from '../img/home.ico';\nimport { Link } from \"react-router-dom\";\nfunction Header() {\n\n    return (\n        <header>\n            <Link to='/'><img id=\"top-logo\" alt=\"home-icon\" src={homeIcon}></img></Link>\n            <div id=\"app-title\">\n                Financial Advisor\n            </div>\n        </header>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport { BrowserRouter as Browser, Switch, Route } from \"react-router-dom\";\nimport './App.css';\nimport Risk from './pages/Risk';\nimport Calculator from './pages/Calculator';\nimport Header from \"./components/Header\";\n\nfunction App() {\n  \n  return (\n    <Browser>\n    <Header/>\n          <Switch>\n            <Route path=\"/\" exact component={Risk} />\n            <Route path=\"/calculator\" exact component={Calculator} />\n          </Switch>\n    </Browser>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const riskLevel = (state = 0, action) => {\n    switch (action.type) {\n        case 'NEW_RISK':\n            return action.payload;\n        default:\n            return state;\n    }\n}\nexport default riskLevel;","import  riskLevel  from \"./riskLevel\";\nimport { combineReducers } from \"redux\";\n\nconst allReducers = combineReducers({\n    risk: riskLevel\n});\n\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'foundation-sites/dist/css/foundation.min.css';\nimport { createStore } from \"redux\";\nimport allReducers from './reducers/index';\nimport { Provider } from 'react-redux';\nimport '@patternfly/react-core/dist/styles/base.css';\n\nconst store = createStore(allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}