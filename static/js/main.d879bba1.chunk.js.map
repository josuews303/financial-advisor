{"version":3,"sources":["pages/Risk.js","hardcode/info.js","actions/index.js","components/Calculator.js","pages/Portfolio.js","img/home.ico","components/Header.js","App.js","reportWebVitals.js","reducers/riskLevel.js","reducers/index.js","index.js"],"names":["Risk","history","useHistory","dispatch","useDispatch","useState","info","setInfo","disableContinue","setDisableContinue","chart","setChart","data","setData","selectedId","setSelectedId","switchChart","useEffect","className","centerAlign","small","medium","large","length","map","i","index","id","color","isHollow","onClick","temp","x","y","type","payload","parseInt","handleRisk","isDisabled","push","hidden","isExpanded","ChartDonut","ariaDesc","ariaTitle","constrainToVisibleArea","labels","datum","subTitle","title","ind","props","Array","apply","expected","setExpected","difference","setDifference","text","setText","Fragment","label","min","ex","undefined","value","disabled","diff","name","rows","cols","values","document","getElementsByClassName","percentages","total","parseFloat","current","ini_difference","t","Math","round","Error","j","num","result","e","alert","message","risk","useSelector","state","to","Calculator","Header","alt","src","homeIcon","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","riskLevel","action","allReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d879bba1.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { selectRisk } from \"../actions\";\nimport getInfo from '../hardcode/info';\nimport { Grid, Cell, Button } from 'react-foundation';\nimport '../css/risk.css';\nimport { ChartDonut } from '@patternfly/react-charts';\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction Risk() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [info, setInfo] = useState([]);\n  const [disableContinue, setDisableContinue] = useState(true);\n  const [chart, setChart] = useState(false);\n  const [data, setData] = useState([]);\n  const [selectedId, setSelectedId] = useState();\n\n  useEffect(() => {\n    setInfo(getInfo());\n  }, []);\n  function handleRisk(id) {\n    var temp = info[id];\n    var data = [{ x: 'Bonds', y: temp[0] }, { x: 'Large Cap', y: temp[1] }, { x: 'Mid Cap', y: temp[2] }, { x: 'Foreign', y: temp[3] }, { x: 'Small Cap', y: temp[4] }];\n    setData(data);\n    setSelectedId(id);\n    dispatch(selectRisk(parseInt(id) + 1));\n    setDisableContinue(false);\n  }\n  function switchChart() {\n    setChart(!chart);\n  }\n  function handleClick() {\n    history.push('/calculator');\n  }\n  return (\n    <div className=\"App\">\n      <Grid className=\"display\" centerAlign>\n        <h4 className=\"title\">Please Select A Risk Level For Your Investment Portfolio</h4>\n\n        <Cell small={10} medium={8} large={8} className=\"info-container\">\n          <h5>Low</h5>\n          <h5>High</h5>\n        </Cell>\n\n        <Cell small={10} medium={10} large={8} className=\"buttons-container\">\n          {\n            info.length > 0 && info.map((i, index) => (\n              <Button key={index}\n                id={index}\n                color=\"secondary\"\n                className={`btn-risk ${selectedId === index && \"active\"}`}\n                isHollow\n                onClick={()=>handleRisk(index)}>{index + 1}</Button>\n            ))\n          }\n          <Button color=\"primary\"\n            id=\"btn-continue\"\n            className=\"btn-risk\"\n            isDisabled={disableContinue}\n            onClick={!disableContinue ? handleClick:null}>\n            Continue\n          </Button>\n        </Cell>\n\n        <Cell small={10} medium={5} large={5} hidden={!chart}>\n          <Button isExpanded color=\"success\" onClick={switchChart}>Table View</Button>\n          {\n            data.length > 0 ?\n              <ChartDonut\n                ariaDesc=\"Average number of pets\"\n                ariaTitle=\"Donut chart example\"\n                constrainToVisibleArea={true}\n                data={data}\n                labels={({ datum }) => `${datum.x}: ${datum.y}%`}\n                subTitle=\"PORTFOLIO\"\n                title=\"INVESTMENT\"\n              />\n              :\n              <h3>Please select a risk level</h3>\n          }\n\n        </Cell>\n        <Cell small={12} medium={10} large={8} hidden={chart}>\n          <Button isExpanded color=\"success\" onClick={switchChart}>Donut Chart View</Button>\n          <table>\n            <thead>\n              <tr>\n                <th>Risk</th>\n                <th>Bonds %</th>\n                <th>Large Cap %</th>\n                <th>Mid Cap %</th>\n                <th>Foreign %</th>\n                <th>Small Cap %</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                info.length > 0 && info.map((i, index) => (\n\n                  <tr key={index}\n                    id={index}\n                    className={`${selectedId === index && \"active\"}`}>\n                    <td>{index + 1}</td>\n                    {\n                      i.map((x, ind) => (\n                        <td key={ind}>{x}</td>\n                      ))\n                    }\n                  </tr>\n                ))\n              }\n            </tbody>\n          </table>\n        </Cell>\n      </Grid>\n\n    </div>\n  );\n}\n\nexport default Risk;\n","export default function getInfo(){\n    let info =[\n        [80,20,0,0,0],\n        [70,15,15,0,0],\n        [60,15,15,10,0],\n        [50,20,20,10,0],\n        [40,20,20,20,0],\n        [35,25,5,30,5],\n        [20,25,25,25,5],\n        [10,20,40,20,10],\n        [5,15,40,25,15],\n        [0,5,25,30,40]\n    ]; \n    return info;\n}","export const selectRisk = (level) =>{\n    return{\n        type:'NEW_RISK',\n        payload:level\n    };\n};","import React, { useState} from 'react';\nimport { Grid, Cell, Button } from 'react-foundation';\nimport '../css/calculator.css';\n\n\nfunction Risk(props) {\n    const [expected, setExpected] = useState(Array.apply(null, Array(5)).map(function () { return 'not'}));\n    const [difference, setDifference] = useState(Array.apply(null, Array(5)).map(function () { return 'not'}));\n    const [text, setText] = useState('');\n    const labels = [\"Bonds\", \"Large Cap\", \"Mid Cap\", \"Foreign\", \"Small Cap\"];\n    const data = props.data;\n\n    function calculate() {\n        //get all values from inputs with class 'values'.\n        var values = document.getElementsByClassName('values');\n        //get hardcode data and initialize variables.\n        var percentages = data;\n        var total = parseFloat(0);\n        var difference = [];\n        var expected = [];\n        var current = [];\n        var ini_difference = [];\n        var t = 0;\n        try {\n            //Iterate over html collection to get the numbers from input and total amount.\n            for (let i = 0; i < values.length; i++) {\n                t = parseFloat(values[i].value);\n                t = Math.round(t * 100) / 100;\n                if (t < 0) {\n                    throw new Error(\"Only positive numbers >= 0\");\n                }\n                total = total + t;\n                current.push(t);\n            }\n            //Iterate over percentage data from hardcode to get the corresponding percentage */100 of any amount.\n            for (let i = 0; i < percentages.length; i++) {\n                var per = percentages[i] / 100;\n                var ex = total * per;\n                ex = Math.round(ex * 100) / 100\n                expected.push(ex);\n                //get difference between expected and current amount.\n                t = parseFloat(ex - current[i]);\n                t = Math.round(t * 100) / 100;\n                //store in two arrays because one of them will be change according to iterations.\n                difference.push(t);\n                ini_difference.push(t);\n            }\n            var text = \"\";//Initialize recommendations message.\n            for (let i = 0; i < difference.length; i++) {\n                if (difference[i] > 0) {\n                    //We need more money in this case.\n                    for (let j = 0; j < difference.length; j++) {\n                        if (j !== i && difference[j] < 0) {\n                            //We found some accont with extra money.\n                            var num = difference[j] * -1;\n                            num = Math.round(num * 100) / 100;\n                            var result = 0\n                            if (difference[i] >= num) {\n                                //We take all the extra money from the account and add the transaction message to text value.\n                                result = difference[i] - num;\n                                result = Math.round(result * 100) / 100;\n                                text = text + `Transfer ${(difference[j] * -1)} from ${labels[j]} to ${labels[i]} \\n`;\n                                difference[i] = result;\n                                difference[j] = 0;\n                            } else if (difference[i] !== 0) {\n                                //We take only the needed amount of money and return the rest to the account. Also we add the transaction message.\n                                result = num - difference[i];\n                                result = Math.round(result * 100) / 100;\n                                text = text + `Transfer ${(difference[i])} from ${labels[j]} to ${labels[i]} \\n`;\n                                difference[i] = 0;\n                                difference[j] = result * -1;\n                            }\n                        }\n                    }\n                }\n            }\n            setDifference(ini_difference);\n            setExpected(expected);\n            setText(text);\n        } catch (e) {\n            alert(e.name + ': ' + e.message)\n        }\n    }\n    return (\n        <React.Fragment>\n            <Cell small={10} medium={8} large={8}>\n                <h3>Please Enter Your Current Portfolio</h3>\n            </Cell>\n\n            <Cell small={12} medium={10} large={8}>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Current Amount</th>\n                            <th>Difference</th>\n                            <th>New Amount</th>\n                            <th>Recomended Transfers</th>\n                        </tr>\n                    </thead>\n                </table>\n            </Cell>\n            <Cell small={12} medium={10} large={8}>\n\n                <Grid className=\"display\">\n\n                    <Cell small={4} medium={3}>\n                        {\n                            labels.map((label, i) => (\n                                <div key={i} className=\"current\">\n                                    <label>{label} $:</label>\n                                    <input className=\"values\" type=\"number\" min={0}></input>\n                                </div>\n                            ))\n                        }\n                    </Cell>\n                    <Cell small={2} medium={3}>\n                        {\n                            difference.map((ex, i) => (\n                                <input key={i} className={ex !== undefined && ex >= 0 ? \"difference\" : \"difference-alt\"} type=\"text\" value={ex!=='not'?ex:''} disabled></input>\n                            ))\n                        }\n                    </Cell>\n                    <Cell small={3}>\n                        {\n                            expected.map((diff, i) => (\n                                <input key={i} className=\"new-amount\" type=\"text\" disabled value={diff!=='not'?diff:''}></input>\n                            ))\n                        }\n\n                    </Cell>\n                    <Cell small={3}>\n                        <textarea disabled id=\"recomended\" name=\"recomended\" rows=\"10\" cols=\"50\" value={text} />\n                    </Cell>\n                </Grid>\n                <Button isExpanded color=\"success\" onClick={calculate}>Rebalance</Button>\n            </Cell>\n        </React.Fragment>\n    );\n}\n\nexport default Risk;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport getInfo from '../hardcode/info';\nimport { Grid, Cell } from 'react-foundation';\nimport '../css/calculator.css';\nimport { Link } from \"react-router-dom\";\nimport Calculator from \"../components/Calculator\";\n\n\nfunction Risk() {\n    const risk = useSelector(state => state.risk);\n    const [info, setInfo] = useState([]);\n\n    useEffect(() => {\n        var data = getInfo();\n        setInfo(data[risk - 1]);\n    }, [risk]);\n    \n    return (\n        <div className=\"App\">\n            {\n                risk === 0 ?\n                    <h1>Select a <Link to='/'>RISK LEVEL</Link> before navigate to this page</h1>\n                    :\n                    <Grid className=\"display\" centerAlign>\n                        <h1 className=\"title\">Personalized Portfolio</h1>\n\n                        <Cell small={10} medium={8} large={8}>\n                            <h3>Risk Level {risk}</h3>\n                        </Cell>\n\n                        <Cell small={12} medium={10} large={8}>\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th>Bonds</th>\n                                        <th>Large Cap</th>\n                                        <th>Mid Cap</th>\n                                        <th>Foreign</th>\n                                        <th>Small Cap</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        {\n                                            info.length > 0 && info.map((i, index) => (\n                                                <td key={index}>{i}%</td>\n                                            ))\n                                        }\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </Cell>\n                        <Calculator data={info}/>\n                        </Grid>\n            }\n\n        </div>\n    );\n}\n\nexport default Risk;\n","export default __webpack_public_path__ + \"static/media/home.0417ee9b.ico\";","import React from 'react';\nimport '../css/header.css';\nimport homeIcon from '../img/home.ico';\nimport { Link } from \"react-router-dom\";\nfunction Header() {\n\n    return (\n        <header>\n            <Link to='/financial-advisor'><img id=\"top-logo\" alt=\"home-icon\" src={homeIcon}></img></Link>\n            <div id=\"app-title\">\n                Financial Advisor\n            </div>\n        </header>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport { BrowserRouter as Browser, Switch, Route } from \"react-router-dom\";\nimport './App.css';\nimport Risk from './pages/Risk';\nimport Calculator from './pages/Portfolio';\nimport Header from \"./components/Header\";\n\nfunction App() {\n  \n  return (\n    <Browser>\n    <Header/>\n          <Switch>\n            <Route path=\"/financial-advisor\" exact component={Risk} />\n            <Route path=\"/calculator\" exact component={Calculator} />\n          </Switch>\n    </Browser>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const riskLevel = (state = 0, action) => {\n    switch (action.type) {\n        case 'NEW_RISK':\n            return action.payload;\n        default:\n            return state;\n    }\n}\nexport default riskLevel;","import  riskLevel  from \"./riskLevel\";\nimport { combineReducers } from \"redux\";\n\nconst allReducers = combineReducers({\n    risk: riskLevel\n});\n\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'foundation-sites/dist/css/foundation.min.css';\nimport { createStore } from \"redux\";\nimport allReducers from './reducers/index';\nimport { Provider } from 'react-redux';\nimport '@patternfly/react-core/dist/styles/base.css';\n\nconst store = createStore(allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}